/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested, IsEnum } from "class-validator";
import { FunctionalRequirementUpdateManyWithoutProjectsInput } from "./FunctionalRequirementUpdateManyWithoutProjectsInput";
import { Type } from "class-transformer";
import { LibraryFrameworkUpdateManyWithoutProjectsInput } from "./LibraryFrameworkUpdateManyWithoutProjectsInput";
import { EnumProjectTypeField } from "./EnumProjectTypeField";

@InputType()
class ProjectUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => FunctionalRequirementUpdateManyWithoutProjectsInput,
  })
  @ValidateNested()
  @Type(() => FunctionalRequirementUpdateManyWithoutProjectsInput)
  @IsOptional()
  @Field(() => FunctionalRequirementUpdateManyWithoutProjectsInput, {
    nullable: true,
  })
  functionalRequirements?: FunctionalRequirementUpdateManyWithoutProjectsInput;

  @ApiProperty({
    required: false,
    type: () => LibraryFrameworkUpdateManyWithoutProjectsInput,
  })
  @ValidateNested()
  @Type(() => LibraryFrameworkUpdateManyWithoutProjectsInput)
  @IsOptional()
  @Field(() => LibraryFrameworkUpdateManyWithoutProjectsInput, {
    nullable: true,
  })
  libraryFrameworks?: LibraryFrameworkUpdateManyWithoutProjectsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  tools?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumProjectTypeField,
  })
  @IsEnum(EnumProjectTypeField)
  @IsOptional()
  @Field(() => EnumProjectTypeField, {
    nullable: true,
  })
  typeField?: "Option1" | null;
}

export { ProjectUpdateInput as ProjectUpdateInput };
